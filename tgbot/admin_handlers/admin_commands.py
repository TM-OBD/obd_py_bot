from aiogram import Dispatcher
from aiogram.types import Message, CallbackQuery, ContentTypes
from aiogram.dispatcher import FSMContext

from tgbot.keyboards.all_inlinekeyboard import Inner_board
from tgbot.keyboards.all_replykeyboard import Reply_board
from tgbot.misc.states import Admin_all_message
from tgbot.misc.states import Admin_add_st
from tgbot.misc.states import Admin_send_message_st


async def admin_com1(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, Admin {message.from_user.first_name}, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ‚å®",
                         reply_markup=Reply_board().admin_keyboards())


async def add_admin1(message: Message):
    await message.answer("Enter user id")
    await Admin_add_st.st1.set()


async def add_admin2(message: Message, state: FSMContext):
    user_id = message.text
    await message.answer(f"Admin added with id {user_id}")
    await state.finish()


async def admin_send_all1(message: Message):
    print("admin_send1")
    await message.answer("–û–±–µ—Ä—ñ—Ç—å", reply_markup=Inner_board.inline_for_sto("–î–ª—è –≤—Å—ñ—Ö", "–î–ª—è –∫–ª—ñ—î–Ω—Ç—ñ–≤"))
    await Admin_all_message.st1.set()


async def admin_notice1(message: Message):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    await Admin_send_message_st.st1.set()


async def admin_notice2(message: Message, state: FSMContext):
    await state.update_data(id=message.text)
    await message.answer("–•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
    await Admin_send_message_st.st2.set()


async def admin_notice3(message: Message, state: FSMContext):
    await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    await state.finish()


async def admin_send_all2(call: CallbackQuery, state: FSMContext):
    await state.update_data(whom=call.data)
    await call.message.answer("–•–æ—Ä–æ—à–æ, –≤ –∫–∞–∫–æ–º –≤–∏–¥–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∫–∞",
                              reply_markup=Inner_board.inline_for_sto("–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç", "–§–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç"))
    await Admin_all_message.st2.set()


async def admin_send_all3(call: CallbackQuery, state: FSMContext):
    await state.update_data(how=call.data)
    await call.bot.edit_message_text("–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏", call.message.chat.id, call.message.message_id)
    await Admin_all_message.st3.set()


async def admin_send_all4(message: Message, state: FSMContext):
    await state.update_data(mes_text=message.text)
    data = await state.get_data()
    if data.get("how") == "–§–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç":
        await message.answer("–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
        await Admin_all_message.st4.set()
    else:
        await Admin_all_message.st4.set()
        await admin_send_all5(message, state)


async def admin_send_all5(message: Message, state: FSMContext):
    data = await state.get_data()
    if data.get("how") == "–§–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç":
        await message.bot.send_photo(message.chat.id, message.photo[0].file_id, caption=data.get("mes_text"))
        await message.answer("–ë—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏—à–µ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –≤—ã —É–≤–µ—Ä–µ–Ω—ã?",
                             reply_markup=Inner_board.inline_for_sto("–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å"))
    else:
        await message.answer(data.get("mes_text"))
        await message.answer("–ë—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏—à–µ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –≤—ã —É–≤–µ—Ä–µ–Ω—ã?",
                             reply_markup=Inner_board.inline_for_sto("–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å"))
    await Admin_all_message.st5.set()


async def admin_send_all6(call: CallbackQuery, state: FSMContext):
    await call.message.answer("–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π ???üí†")
    await state.finish()


def register_admin_com(dp: Dispatcher):
    dp.register_message_handler(admin_com1, commands="admins_help", state="*", is_admin=True)
    dp.register_message_handler(admin_notice1, text="–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É", state="*", is_admin=True)
    dp.register_message_handler(admin_notice2, state=Admin_send_message_st.st1)
    dp.register_message_handler(admin_notice3, state=Admin_send_message_st.st2)
    dp.register_message_handler(add_admin1, text="–î–æ–¥–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞", state="*", is_admin=True)
    dp.register_message_handler(add_admin2, state=Admin_add_st.st1)
    dp.register_message_handler(admin_send_all1, text="–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —É—Å—ñ–º", state="*", is_admin=True)
    dp.register_callback_query_handler(admin_send_all2, text=["–î–ª—è –∫–ª—ñ—î–Ω—Ç—ñ–≤", "–î–ª—è –≤—Å—ñ—Ö"], state=Admin_all_message.st1)
    dp.register_callback_query_handler(admin_send_all3, text=["–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç", "–§–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç"],
                                       state=Admin_all_message.st2)
    dp.register_message_handler(admin_send_all4, state=Admin_all_message.st3)
    dp.register_message_handler(admin_send_all5, state=Admin_all_message.st4, content_types=ContentTypes.ANY)
    dp.register_callback_query_handler(admin_send_all6, text=["–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å"],
                                       state=Admin_all_message.st5)

